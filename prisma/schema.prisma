// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  wallet       String      @unique
  createdAt    DateTime    @default(now())
  sessionKeys  SessionKey[]
  swapRules    SwapRule[]
  swapLogs     SwapLog[]
}

model SessionKey {
  id           String      @id @default(uuid())
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  delegator    String
  keyEncrypted String      // Store encrypted session key! (see note below)
  validUntil   Int
  actions      String[]    // e.g. ["SWAP"]
  createdAt    DateTime    @default(now())
  swapRules    SwapRule[]
}

model SwapRule {
  id           String      @id @default(uuid())
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  sessionKey   SessionKey  @relation(fields: [sessionKeyId], references: [id])
  sessionKeyId String
  fromToken    String
  toToken      String
  percent      Float?
  amount       Float?
  frequency    String      // e.g. "weekly", "monthly"
  nextExecution DateTime
  active       Boolean     @default(true)
  createdAt    DateTime    @default(now())
  swapLogs     SwapLog[]
}

model SwapLog {
  id           String      @id @default(uuid())
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  rule         SwapRule    @relation(fields: [ruleId], references: [id])
  ruleId       String
  txHash       String?
  status       String      // "pending", "success", "failed"
  timestamp    DateTime    @default(now())
  details      Json?
}